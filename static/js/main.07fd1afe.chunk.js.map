{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/Item-status-filter/index.js","components/Item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","search","onSearch","e","setState","target","value","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleDone","onToggleImportant","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAddItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","imortant","toggleProperty","arr","propName","oldItem","toLowerCase","indexOf","items","doneCount","length","visibleItems","todoCount","ReactDOM","render","document","getElementById"],"mappings":"kVACeA,G,MCGG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACtB,OAAQ,yBAAKC,UAAU,qBACnB,uCACA,iCAAOF,EAAP,gBAA0BC,EAA1B,cCNOE,G,kNCIXC,MAAQ,CACJC,OAAQ,I,EAGZC,SAAW,SAACC,GACR,EAAKC,SAAS,CAACH,OAAQE,EAAEE,OAAOC,QAChC,EAAKC,MAAML,SAASC,EAAEE,OAAOC,Q,uDAI7B,OACI,2BACIR,UAAU,eACVU,KAAK,OACLC,YAAY,SACZH,MAAOI,KAAKV,MAAMC,OAClBU,SAAUD,KAAKR,e,GAlBLU,c,QC0CXC,G,6KAvCD,IAAD,EAEwEH,KAAKH,MAA3EO,EAFF,EAEEA,MAAOC,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,aAAcC,EAFlC,EAEkCA,kBAEnCC,EAAa,iBAWjB,OAfK,EAEqDrB,OAKtDqB,GAAc,SAPb,EAE2DC,YAS5DD,GAAc,cAKd,0BAAMpB,UAAWoB,GACjB,0BACIpB,UAAU,uBACVsB,QAASJ,GACRF,GAGL,4BAAQN,KAAK,SAASV,UAAU,iCACxBsB,QAASH,GACb,uBAAGnB,UAAU,uBAGjB,4BAAQU,KAAK,SAASV,UAAU,iCACxBsB,QAASL,GACb,uBAAGjB,UAAU,wB,GAhCFc,cCHZS,G,MCGE,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,MAAOP,EAA8C,EAA9CA,UAAUE,EAAoC,EAApCA,kBAAkBD,EAAkB,EAAlBA,aAE5CO,EAAWD,EAAME,KAAI,SAACC,GAAU,IAE3BC,EAAoBD,EAApBC,GAAOC,EAFmB,YAENF,EAFM,QAIjC,OACI,wBAAIG,IAAKF,EAAI5B,UAAU,mCACnB,kBAAC,EAAD,iBACQ6B,EADR,CAEIZ,UAAW,kBAAMA,EAAUW,IAC3BT,kBAAoB,kBAAKA,EAAkBS,IACvCV,aAAe,kBAAKA,EAAaU,WAMrD,OACI,wBAAI5B,UAAU,wBACTyB,KCvBEM,E,4MCIXC,QAAU,CACN,CAACC,KAAM,MAAOjB,MAAO,OACrB,CAACiB,KAAM,SAAUjB,MAAO,UACxB,CAACiB,KAAM,OAAQjB,MAAO,S,uDAGhB,IAAD,EAC4BJ,KAAKH,MAA/ByB,EADF,EACEA,OAAQC,EADV,EACUA,eACTH,EAAUpB,KAAKoB,QAAQN,KAAI,YAAoB,IAAlBO,EAAiB,EAAjBA,KAAMjB,EAAW,EAAXA,MAE/BoB,EADWF,IAAWD,EACH,WAAa,wBACtC,OACI,4BAAQjC,UAAS,cAASoC,GAAS1B,KAAK,SAASoB,IAAKG,EAC9CX,QAAS,kBAAMa,EAAeF,KAAQjB,MAItD,OACI,yBAAKhB,UAAU,aACVgC,O,GArB6BlB,aCF/BuB,G,kNCIXnC,MAAQ,CACJc,MAAO,I,EAGXsB,cAAgB,SAACjC,GACb,EAAKC,SAAS,CACVU,MAAOX,EAAEE,OAAOC,S,EAIxB+B,SAAW,SAAClC,GACRA,EAAEmC,iBACE,EAAKtC,MAAMc,QACX,EAAKP,MAAMgC,UAAU,EAAKvC,MAAMc,OAChC,EAAKV,SAAS,CAACU,MAAO,O,uDAM1B,OACI,0BAAMhB,UAAU,gBAAgBuC,SAAU3B,KAAK2B,UAC3C,2BACI7B,KAAK,OACLV,UAAU,eACVa,SAAUD,KAAK0B,cACf3B,YAAY,aACZH,MAAOI,KAAKV,MAAMc,QAEtB,4BACIhB,UAAU,6BADd,iB,GA/ByBc,cCmI1B4B,G,kNA5HXC,MAAQ,I,EACRzC,MAAQ,CACJ0C,SAAU,CACN,EAAKC,eAAe,cACpB,EAAKA,eAAe,gBACpB,EAAKA,eAAe,eAGxB1C,OAAQ,GACR+B,OAAQ,O,EAYZY,WAAa,SAAClB,GACV,EAAKtB,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SACNG,EAAMH,EAASI,WAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,KAEjD,MAAO,CACHgB,SAFU,sBAAOA,EAASM,MAAM,EAAGH,IAAzB,YAAkCH,EAASM,MAAMH,EAAM,U,EAO7EI,QAAU,SAACC,GACP,IAAMC,EAAU,CACZrC,MAAOoC,EACPE,UAAU,EACV1B,GAAI,EAAKe,SAEb,EAAKrC,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SAEZ,MAAO,CAACA,SADI,sBAAOA,GAAP,CAAiBS,S,EAarCnC,aAAe,SAACU,GACZ,EAAKtB,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SACZ,MAAO,CACHA,SAAU,EAAKW,eAAeX,EAAUhB,EAAI,a,EAKxDT,kBAAoB,SAACS,GACjB,EAAKtB,UAAS,YAAiB,IAAfsC,EAAc,EAAdA,SACZ,MAAO,CACHA,SAAU,EAAKW,eAAeX,EAAUhB,EAAI,kB,EAiBxDxB,SAAW,SAACD,GACR,EAAKG,SAAS,CAACH,OAAQA,K,EAgB3BgC,eAAiB,SAACD,GACd,EAAK5B,SAAS,CAAC4B,Y,6DArFJlB,GACX,MAAO,CACHA,MAAOA,EACPsC,UAAU,EACVvD,MAAM,EACN6B,GAAIhB,KAAK+B,W,qCA0BFa,EAAK5B,EAAI6B,GACpB,IAAMV,EAAMS,EAAIR,WAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,KACtC8B,EAAUF,EAAIT,GACdM,EAAO,2BAAOK,GAAP,kBAAiBD,GAAYC,EAAQD,KAClD,MAAM,GAAN,mBAAWD,EAAIN,MAAM,EAAGH,IAAxB,CAA8BM,GAA9B,YAA0CG,EAAIN,MAAMH,EAAM,O,6BAqBvDS,EAAKrD,GAER,OAAe,IAAXA,EACOqD,EAGJA,EAAItB,QAAO,SAACsB,GACf,OAAOA,EAAIxC,MAAM2C,cAAcC,QAAQzD,EAAOwD,gBAAkB,O,6BAQjEE,EAAO3B,GACV,OAAQA,GACJ,IAAK,MACD,OAAO2B,EACX,IAAM,SACF,OAAOA,EAAM3B,QAAO,SAACP,GAAD,OAAWA,EAAK5B,QACxC,IAAK,OACD,OAAO8D,EAAM3B,QAAO,SAACP,GAAD,OAAUA,EAAK5B,QACvC,QACI,OAAO8D,K,+BAST,IAAD,EAC8BjD,KAAKV,MAAjC0C,EADF,EACEA,SAAUzC,EADZ,EACYA,OAAQ+B,EADpB,EACoBA,OACnB4B,EAAYlB,EAASV,QAAO,SAACe,GAAD,OAAQA,EAAGlD,QAAMgE,OAC7CC,EAAepD,KAAKsB,OAAOtB,KAAKT,OAAOyC,EAAUzC,GAAS+B,GAC1D+B,EAAYrB,EAASmB,OAASD,EACpC,OACI,yBAAK9D,UAAU,OACX,kBAAC,EAAD,CAAWF,KAAMmE,EAAWlE,KAAM+D,IAClC,kBAAC,EAAD,CAAa1D,SAAUQ,KAAKR,WAC5B,kBAAC,EAAD,CAAkB8B,OAAQA,EAAQC,eAAgBvB,KAAKuB,iBACvD,kBAAC,EAAD,CAAUX,MAAOwC,EACP/C,UAAWL,KAAKkC,WAChB3B,kBAAmBP,KAAKO,kBACxBD,aAAcN,KAAKM,eAE7B,kBAAC,EAAD,CAAauB,UAAW7B,KAAKuC,e,GArH3BrC,cCLlBoD,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.07fd1afe.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader","import React from \"react\";\r\nimport \"./app-header.css\"\r\n\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (<div className=\"app-header d-flex\">\r\n        <h1>My List</h1>\r\n        <h2>  {toDo} more to do, {done} done  </h2>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel","import React, {Component} from \"react\";\r\nimport \"./search-panel.css\"\r\n\r\nclass SearchPanel extends Component {\r\n\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        this.setState({search: e.target.value})\r\n        this.props.onSearch(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"search-input\"\r\n                type=\"text\"\r\n                placeholder=\"search\"\r\n                value={this.state.search}\r\n                onChange={this.onSearch}\r\n            />)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchPanel","import React, {Component} from \"react\";\r\nimport \"./todo-list-item.css\"\r\n\r\n\r\nclass TodoListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const {label, onDeleted, onToggleDone, onToggleImportant, done, important} = this.props;\r\n\r\n        let classNames = 'todo-list-item'\r\n\r\n        if (done) {\r\n            classNames += ' done'\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ' important'\r\n        }\r\n\r\n\r\n        return (\r\n            <span className={classNames}>\r\n            <span\r\n                className=\"todo-list-item-label\"\r\n                onClick={onToggleDone}>\r\n                {label}\r\n            </span>\r\n\r\n            <button type=\"button\" className=\"btn btn-outline-success btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\"/>\r\n            </button>\r\n\r\n            <button type=\"button\" className=\"btn btn-outline-success btn-sm\"\r\n                    onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\"/>\r\n            </button>\r\n\r\n        </span>)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default TodoListItem","import TodoList from \"./todo-list\";\r\nexport default TodoList","import React from \"react\";\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\nimport \"./todo-list.css\"\r\n\r\nconst TodoList = ({todos, onDeleted,onToggleImportant,onToggleDone}) => {\r\n\r\n    const elements = todos.map((item) => {\r\n\r\n        const {id, ...itemProps} = item\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item todo-group-item\">\r\n                <TodoListItem\r\n                    {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant ={()=> onToggleImportant(id)}\r\n                        onToggleDone ={()=> onToggleDone(id)}\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import ItemStatusFilter from \"./item-status-filter\";\r\nexport default ItemStatusFilter","import React, {Component} from \"react\";\r\n\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ]\r\n\r\n    render() {\r\n        const {filter, onFilterChange} = this.props\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button className={`btn ${clazz}`} type=\"button\" key={name}\r\n                        onClick={() => onFilterChange(name)}>{label}</button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import ItemAddForm from \"./item-add-form\";\r\nexport default ItemAddForm;","import React, {Component} from \"react\";\r\nimport \"./item-add-form.css\"\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.label) {\r\n            this.props.onAddItem(this.state.label)\r\n            this.setState({label: ''})\r\n        } else return\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"Write task\"\r\n                    value={this.state.label}\r\n                />\r\n                <button\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Add item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../Item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form\";\r\nimport \"./app.css\"\r\n\r\n\r\nclass App extends Component {\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Make coffe'),\r\n            this.createTodoItem('Have a lunch'),\r\n            this.createTodoItem('Get dinner'),\r\n\r\n        ],\r\n        search: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label: label,\r\n            imortant: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id)\r\n            const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text) => {\r\n        const newItem = {\r\n            label: text,\r\n            imortant: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({todoData}) => {\r\n            const newArr = [...todoData, newItem]\r\n            return {todoData: newArr}\r\n        })\r\n    }\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id)\r\n        const oldItem = arr[idx]\r\n        const newItem = {...oldItem, [propName]: !oldItem[propName]}\r\n        return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    search(arr, search) {\r\n\r\n        if (search === 0) {\r\n            return arr;\r\n        }\r\n\r\n        return arr.filter((arr) => {\r\n            return arr.label.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n        })\r\n    }\r\n\r\n    onSearch = (search) => {\r\n        this.setState({search: search})\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case  'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done' :\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {todoData, search, filter} = this.state\r\n        const doneCount = todoData.filter((el) => el.done).length\r\n        const visibleItems = this.filter(this.search(todoData, search), filter)\r\n        const todoCount = todoData.length - doneCount\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <SearchPanel onSearch={this.onSearch}/>\r\n                <ItemStatusFilter filter={filter} onFilterChange={this.onFilterChange}/>\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}\r\n                />\r\n                <ItemAddForm onAddItem={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './components/app/app'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}